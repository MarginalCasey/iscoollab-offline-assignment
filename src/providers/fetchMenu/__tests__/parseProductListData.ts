import { parseProductListData } from "../index";

describe("parseProductListData", () => {
  it("should correctly parse product list data", () => {
    const productListDataInput = {
      schema: {
        product_id: 0,
        sort: 1,
        name: 2,
        description: 3,
        price: 4,
        price_type: 5,
        calorie: 6,
        type: 7,
        sub_type: 8,
        is_mandatory: 9,
        min_limit: 10,
        max_limit: 11,
        default_num: 12,
        is_common: 13,
        is_default: 14,
        is_enable: 15,
        is_visible: 16,
        block_list: 17,
        product_list: 18,
        adjust_list: 19,
        icon_list: 20,
        img_list: 21,
        tag_list: 22,
        combine_list: 23,
        vendor_custom_id: 24,
        group_id: 25,
        group_item_id: 26,
      },
      data: {
        "1337702035": [
          1337702035,
          1,
          "英倫伯爵紅茶",
          null,
          35,
          3,
          null,
          1,
          0,
          false,
          0,
          0,
          1,
          true,
          false,
          true,
          true,
          [],
          [],
          [1337702335, 1337702329, 1337702209, 1337702326],
          [],
          [],
          [],
          [618816160],
          "3006",
        ],
      },
    };

    const combineDataInput = {
      schema: {
        combine_id: 0,
        name: 1,
        price: 2,
        price_type: 3,
        is_common: 4,
        edge_list: 5,
        common_list: 6,
      },
      common_schema: {
        name: 0,
        sub_type: 1,
        price: 2,
        price_type: 3,
      },
      data: {
        "618816160": [
          618816160,
          "英倫伯爵紅茶",
          null,
          3,
          true,
          {
            "1337702035": [1337702035, 1, 35, 3, 1],
            "1337702218": [1337702218, 4, null, 3, 2],
            "1337702362": [1337702362, 1, 0, 3, 2],
            "1337702365": [1337702365, 2, 0, 3, 2],
            "1337702368": [1337702368, 3, 0, 3, 2],
            "1337702371": [1337702371, 4, 0, 3, 2],
            "1337702374": [1337702374, 5, 0, 3, 2],
            "1337702377": [1337702377, 4, 0, 3, 2],
            "1337702380": [1337702380, 3, 0, 3, 2],
            "1337702383": [1337702383, 2, 0, 3, 2],
            "1337702386": [1337702386, 1, 0, 3, 2],
            "1337702389": [1337702389, 7, 0, 3, 2],
            "1337702398": [1337702398, 0, 10, 3, 2],
            "1337702401": [1337702401, 6, 0, 3, 2],
            "1337702404": [1337702404, 7, 0, 3, 2],
            "1337702407": [1337702407, 6, 0, 3, 2],
            "1337702449": [1337702449, 4, 10, 3, 2],
            "1337702542": [1337702542, 5, 0, 3, 2],
            "1337702593": [1337702593, 5, 10, 3, 2],
            "1337702629": [1337702629, 9, 15, 3, 2],
            "1337702641": [1337702641, 10, 15, 3, 2],
            "1337702728": [1337702728, 8, 15, 3, 2],
          },
          [
            [["英倫伯爵紅茶", 0, 35, 3]],
            [
              ["冰", 42, 0, 3],
              ["熱", 48, 0, 3],
            ],
          ],
        ],
      },
    };

    const expectedOutput = {
      1337702035: {
        id: 1337702035,
        sort: 1,
        name: "英倫伯爵紅茶",
        price: 35,
        adjustList: [1337702335, 1337702329, 1337702209, 1337702326],
        temperature: ["冰", "熱"],
        availableOptions: {
          "1337702035": true,
          "1337702218": true,
          "1337702362": true,
          "1337702365": true,
          "1337702368": true,
          "1337702371": true,
          "1337702374": true,
          "1337702377": true,
          "1337702380": true,
          "1337702383": true,
          "1337702386": true,
          "1337702389": true,
          "1337702398": true,
          "1337702401": true,
          "1337702404": true,
          "1337702407": true,
          "1337702449": true,
          "1337702542": true,
          "1337702593": true,
          "1337702629": true,
          "1337702641": true,
          "1337702728": true,
        },
      },
    };

    expect(
      parseProductListData(productListDataInput, combineDataInput)
    ).toEqual(expectedOutput);
  });
});
